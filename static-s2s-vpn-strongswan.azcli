rg=s2s-vpn-static
location=centralindia

site1_vnet_name=site1
site1_vnet_address=10.1.0.0/16
site1_gw_subnet_name=gw
site1_gw_subnet_address=10.1.0.0/24
site1_vm_subnet_name=vm
site1_vm_subnet_address=10.1.1.0/24

site2_vnet_name=site2
site2_vnet_address=10.2.0.0/16
site2_gw_subnet_name=gw
site2_gw_subnet_address=10.2.0.0/24
site2_vm_subnet_name=vm
site2_vm_subnet_address=10.2.1.0/24

site3_vnet_name=site3
site3_vnet_address=10.3.0.0/16
site3_gw_subnet_name=gw
site3_gw_subnet_address=10.3.0.0/24
site3_vm_subnet_name=vm
site3_vm_subnet_address=10.3.1.0/24

admin_username=$(whoami)
myip=$(curl -s4 https://ifconfig.co/)

psk=secret12345
vm_size=Standard_B2ats_v2
vm_image=$(az vm image list -l $location -p Canonical -s 22_04-lts --all --query "[?offer=='0001-com-ubuntu-server-jammy'].urn" -o tsv | sort -u | tail -n 1) && echo $vm_image

cloudinit_file=~/cloudinit.txt
cat <<EOF > $cloudinit_file
#cloud-config
runcmd:
  - sudo apt update && sudo apt install -y strongswan strongswan-pki libcharon-extra-plugins inetutils-traceroute
  - cp /etc/ipsec.conf /etc/ipsec.conf.bak
  - cp /etc/ipsec.secrets /etc/ipsec.secrets.bak
  - echo "net.ipv4.ip_forward=1" | sudo tee -a /etc/sysctl.conf
  - echo "net.ipv4.conf.all.accept_redirects=0" | sudo tee -a /etc/sysctl.conf
  - echo "net.ipv4.conf.all.send_redirects=0" | sudo tee -a /etc/sysctl.conf
  - sudo sysctl -p
EOF

# Resource Groups
echo -e "\e[1;36mCreating $rg Resource Group...\e[0m"
az group create -n $rg -l $location -o none

# site1 vnet
echo -e "\e[1;36mCreating $site1_vnet_name VNet...\e[0m"
az network vnet create -g $rg -n $site1_vnet_name -l $location --address-prefixes $site1_vnet_address --subnet-name $site1_vm_subnet_name --subnet-prefixes $site1_vm_subnet_address -o none
az network vnet subnet create -g $rg -n $site1_gw_subnet_name --address-prefixes $site1_gw_subnet_address --vnet-name $site1_vnet_name -o none

# site2 vnet
echo -e "\e[1;36mCreating $site2_vnet_name VNet...\e[0m"
az network vnet create -g $rg -n $site2_vnet_name -l $location --address-prefixes $site2_vnet_address --subnet-name $site2_vm_subnet_name --subnet-prefixes $site2_vm_subnet_address -o none
az network vnet subnet create -g $rg -n $site2_gw_subnet_name --address-prefixes $site2_gw_subnet_address --vnet-name $site2_vnet_name -o none

# site3 vnet
echo -e "\e[1;36mCreating $site3_vnet_name VNet...\e[0m"
az network vnet create -g $rg -n $site3_vnet_name -l $location --address-prefixes $site3_vnet_address --subnet-name $site3_vm_subnet_name --subnet-prefixes $site3_vm_subnet_address -o none
az network vnet subnet create -g $rg -n $site3_gw_subnet_name --address-prefixes $site3_gw_subnet_address --vnet-name $site3_vnet_name -o none

# site1 gw
echo -e "\e[1;36mDeploying $site1_vnet_name-gw VM...\e[0m"
az network public-ip create -g $rg -n $site1_vnet_name-gw -l $location --allocation-method Static --sku Basic -o none
az network nic create -g $rg -n $site1_vnet_name-gw -l $location --vnet-name $site1_vnet_name --subnet $site1_gw_subnet_name --ip-forwarding true --public-ip-address $site1_vnet_name-gw -o none
az vm create -g $rg -n $site1_vnet_name-gw -l $location --image $vm_image --nics $site1_vnet_name-gw --os-disk-name $site1_vnet_name-gw --size $vm_size --admin-username $admin_username --generate-ssh-keys --custom-data $cloudinit_file --no-wait
# site1 gw details
site1_gw_pubip=$(az network public-ip show -g $rg -n $site1_vnet_name-gw --query ipAddress -o tsv) && echo $site1_vnet_name-gw public ip: $site1_gw_pubip
site1_gw_private_ip=$(az network nic show -g $rg -n $site1_vnet_name-gw --query ipConfigurations[].privateIPAddress -o tsv)  && echo $site1_vnet_name-gw private ip: $site1_gw_private_ip

# site2 gw
echo -e "\e[1;36mDeploying $site2_vnet_name-gw VM...\e[0m"
az network public-ip create -g $rg -n $site2_vnet_name-gw -l $location --allocation-method Static --sku Basic -o none
az network nic create -g $rg -n $site2_vnet_name-gw -l $location --vnet-name $site2_vnet_name --subnet $site2_gw_subnet_name --ip-forwarding true --public-ip-address $site2_vnet_name-gw -o none
az vm create -g $rg -n $site2_vnet_name-gw -l $location --image $vm_image --nics $site2_vnet_name-gw --os-disk-name $site2_vnet_name-gw --size $vm_size --admin-username $admin_username --generate-ssh-keys --custom-data $cloudinit_file --no-wait
# site2 gw details
site2_gw_pubip=$(az network public-ip show -g $rg -n $site2_vnet_name-gw --query ipAddress -o tsv) && echo $site2_vnet_name-gw public ip: $site2_gw_pubip
site2_gw_private_ip=$(az network nic show -g $rg -n $site2_vnet_name-gw --query ipConfigurations[].privateIPAddress -o tsv)  && echo $site2_vnet_name-gw private ip: $site2_gw_private_ip

# site3 gw
echo -e "\e[1;36mDeploying $site3_vnet_name-gw VM...\e[0m"
az network public-ip create -g $rg -n $site3_vnet_name-gw -l $location --allocation-method Static --sku Basic -o none
az network nic create -g $rg -n $site3_vnet_name-gw -l $location --vnet-name $site3_vnet_name --subnet $site3_gw_subnet_name --ip-forwarding true --public-ip-address $site3_vnet_name-gw -o none
az vm create -g $rg -n $site3_vnet_name-gw -l $location --image $vm_image --nics $site3_vnet_name-gw --os-disk-name $site3_vnet_name-gw --size $vm_size --admin-username $admin_username --generate-ssh-keys --custom-data $cloudinit_file --no-wait
# site3 gw details
site3_gw_pubip=$(az network public-ip show -g $rg -n $site3_vnet_name-gw --query ipAddress -o tsv) && echo $site3_vnet_name-gw public ip: $site3_gw_pubip
site3_gw_private_ip=$(az network nic show -g $rg -n $site3_vnet_name-gw --query ipConfigurations[].privateIPAddress -o tsv)  && echo $site3_vnet_name-gw private ip: $site3_gw_private_ip

# site1 vm
echo -e "\e[1;36mDeploying $site1_vnet_name VM...\e[0m"
az network nic create -g $rg -n $site1_vnet_name -l $location --vnet-name $site1_vnet_name --subnet $site1_vm_subnet_name -o none
az vm create -g $rg -n $site1_vnet_name -l $location --image $vm_image --nics $site1_vnet_name --os-disk-name $site1_vnet_name --size $vm_size --admin-username $admin_username --generate-ssh-keys --no-wait
site1_vm_ip=$(az network nic show -g $rg -n $site1_vnet_name --query ipConfigurations[0].privateIPAddress -o tsv) && echo $site1_vnet_name vm private ip: $site1_vm_ip

# site2 vm
echo -e "\e[1;36mDeploying $site2_vnet_name VM...\e[0m"
az network nic create -g $rg -n $site2_vnet_name -l $location --vnet-name $site2_vnet_name --subnet $site2_vm_subnet_name -o none
az vm create -g $rg -n $site2_vnet_name -l $location --image $vm_image --nics $site2_vnet_name --os-disk-name $site2_vnet_name --size $vm_size --admin-username $admin_username --generate-ssh-keys --no-wait
site2_vm_ip=$(az network nic show -g $rg -n $site2_vnet_name --query ipConfigurations[0].privateIPAddress -o tsv) && echo $site2_vnet_name vm private ip: $site2_vm_ip

# site3 vm
echo -e "\e[1;36mDeploying $site3_vnet_name VM...\e[0m"
az network nic create -g $rg -n $site3_vnet_name -l $location --vnet-name $site3_vnet_name --subnet $site3_vm_subnet_name -o none
az vm create -g $rg -n $site3_vnet_name -l $location --image $vm_image --nics $site3_vnet_name --os-disk-name $site3_vnet_name --size $vm_size --admin-username $admin_username --generate-ssh-keys --no-wait
site3_vm_ip=$(az network nic show -g $rg -n $site3_vnet_name --query ipConfigurations[0].privateIPAddress -o tsv) && echo $site3_vnet_name vm private ip: $site3_vm_ip

# site1 route table
echo -e "\e[1;36mDeploying $site1_vnet_name route table and attaching it to $site1_vm_subnet_name subnet...\e[0m"
az network route-table create -n $site1_vnet_name -g $rg -l $location -o none
az network route-table route create --address-prefix $site2_vnet_address -n to-$site2_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $site1_vnet_name --next-hop-ip-address $site1_gw_private_ip -o none
az network route-table route create --address-prefix $site3_vnet_address -n to-$site3_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $site1_vnet_name --next-hop-ip-address $site1_gw_private_ip -o none
az network vnet subnet update --vnet-name $site1_vnet_name -n $site1_vm_subnet_name --route-table $site1_vnet_name -g $rg -o none

# site2 route table
echo -e "\e[1;36mDeploying $site2_vnet_name route table and attaching it to $site2_vm_subnet_name subnet...\e[0m"
az network route-table create -n $site2_vnet_name -g $rg -l $location -o none
az network route-table route create --address-prefix $site1_vnet_address -n to-$site1_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $site2_vnet_name --next-hop-ip-address $site2_gw_private_ip -o none
az network route-table route create --address-prefix $site3_vnet_address -n to-$site3_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $site2_vnet_name --next-hop-ip-address $site2_gw_private_ip -o none
az network vnet subnet update --vnet-name $site2_vnet_name -n $site2_vm_subnet_name --route-table $site2_vnet_name -g $rg -o none

# site3 route table
echo -e "\e[1;36mDeploying $site3_vnet_name route table and attaching it to $site3_vm_subnet_name subnet...\e[0m"
az network route-table create -n $site3_vnet_name -g $rg -l $location -o none
az network route-table route create --address-prefix $site1_vnet_address -n to-$site1_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $site3_vnet_name --next-hop-ip-address $site3_gw_private_ip -o none
az network route-table route create --address-prefix $site2_vnet_address -n to-$site2_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $site3_vnet_name --next-hop-ip-address $site3_gw_private_ip -o none
az network vnet subnet update --vnet-name $site3_vnet_name -n $site3_vm_subnet_name --route-table $site3_vnet_name -g $rg -o none

#######################
# site1 VPN Config  #
#######################
echo -e "\e[1;36mCreating S2S/BGP VPN Config files for $site1_vnet_name Gateway VM...\e[0m"
# ipsec.secrets
psk_file=~/ipsec.secrets
cat <<EOF > $psk_file
$site1_gw_pubip $site2_gw_pubip : PSK $psk
$site1_gw_pubip $site3_gw_pubip : PSK $psk
EOF

ipsec_file=~/ipsec.conf
cat <<EOF > $ipsec_file
config setup
    charondebug="all"

conn $site2_vnet_name-gw
    authby=secret
    auto=start
    left=%defaultroute
    leftid=$site1_gw_pubip
    leftsubnet=$site1_vnet_address
    right=$site2_gw_pubip
    rightsubnet=$site2_vnet_address
    type=tunnel
    keyexchange=ikev2
conn $site3_vnet_name-gw
    authby=secret
    auto=start
    left=%defaultroute
    leftid=$site1_gw_pubip
    leftsubnet=$site1_vnet_address
    right=$site3_gw_pubip
    rightsubnet=$site3_vnet_address
    type=tunnel
    keyexchange=ikev2
EOF

##### copy files to onprem gw
echo -e "\e[1;36mCopying and applying S2S VPN Config files to $site1_vnet_name-gw Gateway VM...\e[0m"
scp -o StrictHostKeyChecking=no $psk_file $ipsec_file $site1_gw_pubip:/home/$admin_username
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "sudo mv /home/$admin_username/ipsec.* /etc/"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "sudo systemctl restart ipsec && sudo systemctl enable ipsec"

# clean up config files
rm $psk_file $ipsec_file $cloudinit_file

#######################
# site2 VPN Config  #
#######################
echo -e "\e[1;36mCreating S2S/BGP VPN Config files for $site2_vnet_name Gateway VM...\e[0m"
# ipsec.secrets
psk_file=~/ipsec.secrets
cat <<EOF > $psk_file
$site2_gw_pubip $site1_gw_pubip : PSK $psk
$site2_gw_pubip $site3_gw_pubip : PSK $psk
EOF

ipsec_file=~/ipsec.conf
cat <<EOF > $ipsec_file
config setup
    charondebug="all"

conn $site1_vnet_name-gw
    authby=secret
    auto=start
    left=%defaultroute
    leftid=$site2_gw_pubip
    leftsubnet=$site2_vnet_address
    right=$site1_gw_pubip
    rightsubnet=$site1_vnet_address
    type=tunnel
    keyexchange=ikev2
conn $site3_vnet_name-gw
    authby=secret
    auto=start
    left=%defaultroute
    leftid=$site2_gw_pubip
    leftsubnet=$site2_vnet_address
    right=$site3_gw_pubip
    rightsubnet=$site3_vnet_address
    type=tunnel
    keyexchange=ikev2
EOF

##### copy files to onprem gw
echo -e "\e[1;36mCopying and applying S2S VPN Config files to $site2_vnet_name-gw Gateway VM...\e[0m"
scp -o StrictHostKeyChecking=no $psk_file $ipsec_file $site2_gw_pubip:/home/$admin_username
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "sudo mv /home/$admin_username/ipsec.* /etc/"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "sudo systemctl restart ipsec && sudo systemctl enable ipsec"

# clean up config files
rm $psk_file $ipsec_file

#######################
# site3 VPN Config  #
#######################
echo -e "\e[1;36mCreating S2S/BGP VPN Config files for $site3_vnet_name Gateway VM...\e[0m"
# ipsec.secrets
psk_file=~/ipsec.secrets
cat <<EOF > $psk_file
$site3_gw_pubip $site1_gw_pubip : PSK $psk
$site3_gw_pubip $site2_gw_pubip : PSK $psk
EOF

ipsec_file=~/ipsec.conf
cat <<EOF > $ipsec_file
config setup
    charondebug="all"

conn $site1_vnet_name-gw
    authby=secret
    auto=start
    left=%defaultroute
    leftid=$site3_gw_pubip
    leftsubnet=$site3_vnet_address
    right=$site1_gw_pubip
    rightsubnet=$site1_vnet_address
    type=tunnel
    keyexchange=ikev2
conn $site2_vnet_name-gw
    authby=secret
    auto=start
    left=%defaultroute
    leftid=$site3_gw_pubip
    leftsubnet=$site3_vnet_address
    right=$site2_gw_pubip
    rightsubnet=$site2_vnet_address
    type=tunnel
    keyexchange=ikev2
EOF

##### copy files to onprem gw
echo -e "\e[1;36mCopying and applying S2S VPN Config files to $site3_vnet_name-gw Gateway VM...\e[0m"
scp -o StrictHostKeyChecking=no $psk_file $ipsec_file $site3_gw_pubip:/home/$admin_username
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "sudo mv /home/$admin_username/ipsec.* /etc/"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "sudo systemctl restart ipsec && sudo systemctl enable ipsec"

# clean up config files
rm $psk_file $ipsec_file

#############
# Diagnosis #
#############
echo -e "\e[1;36mChecking IPSec status on $site1_vnet_name-gw...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "sudo ipsec status"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "sudo ipsec statusall"
echo -e "\e[1;36mChecking IPSec status on $site2_vnet_name-gw...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "sudo ipsec status"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "sudo ipsec statusall"
echo -e "\e[1;36mChecking IPSec status on $site3_vnet_name-gw...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "sudo ipsec status"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "sudo ipsec statusall"

echo -e "\e[1;36mChecking connectivity from $site1_vnet_name-gw VM to $site2_vnet_name and to $site3_vnet_name...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "ping $site2_gw_private_ip -c 3"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "ping $site2_vm_ip -c 3"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "ping $site3_gw_private_ip -c 3"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "ping $site3_vm_ip -c 3"

echo -e "\e[1;36mChecking connectivity from $site2_vnet_name-gw VM to $site1_vnet_name and to $site2_vnet_name...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "ping $site1_gw_private_ip -c 3"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "ping $site1_vm_ip -c 3"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "ping $site3_gw_private_ip -c 3"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "ping $site3_vm_ip -c 3"

echo -e "\e[1;36mChecking connectivity from $site3_vnet_name-gw VM to $site1_vnet_name and to $site3_vnet_name...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "ping $site1_gw_private_ip -c 3"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "ping $site1_vm_ip -c 3"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "ping $site2_gw_private_ip -c 3"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "ping $site2_vm_ip -c 3"

#cleanup
# az group delete -g $rg -y --no-wait
